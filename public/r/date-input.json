{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "date-input",
  "type": "registry:component",
  "title": "Date Input",
  "description": "A beautiful date input component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "calendar",
    "input",
    "popover"
  ],
  "files": [
    {
      "path": "registry/new-york/components/date-input/date-input.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { CalendarIcon } from \"lucide-react\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Calendar } from \"@/components/ui/calendar\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\";\r\n\r\nfunction formatDate(date: Date | undefined) {\r\n  if (!date) {\r\n    return \"\";\r\n  }\r\n\r\n  return date.toLocaleDateString(\"en-US\", {\r\n    day: \"2-digit\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n  });\r\n}\r\n\r\nfunction isValidDate(date: Date | undefined) {\r\n  if (!date) {\r\n    return false;\r\n  }\r\n  return !isNaN(date.getTime());\r\n}\r\n\r\nexport function DateInput({\r\n  value,\r\n  onChange,\r\n}: {\r\n  value?: Date;\r\n  onChange?: (date: Date) => void;\r\n}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [date, setDate] = React.useState<Date | undefined>(value);\r\n  const [month, setMonth] = React.useState<Date | undefined>(date);\r\n  const [val, setVal] = React.useState(formatDate(date));\r\n\r\n  React.useEffect(() => {\r\n    if (date) {\r\n      onChange?.(date);\r\n    }\r\n  }, [date, onChange]);\r\n\r\n  return (\r\n    <div className=\"relative flex gap-2\">\r\n      <Input\r\n        id=\"date\"\r\n        value={val}\r\n        placeholder=\"June 01, 2025\"\r\n        className=\"bg-background pr-10\"\r\n        onChange={(e) => {\r\n          const date = new Date(e.target.value);\r\n          setVal(e.target.value);\r\n          if (isValidDate(date)) {\r\n            setDate(date);\r\n            setMonth(date);\r\n          }\r\n        }}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"ArrowDown\") {\r\n            e.preventDefault();\r\n            setOpen(true);\r\n          }\r\n        }}\r\n      />\r\n      <Popover open={open} onOpenChange={setOpen}>\r\n        <PopoverTrigger asChild>\r\n          <Button\r\n            id=\"date-picker\"\r\n            variant=\"ghost\"\r\n            className=\"absolute top-1/2 right-2 size-6 -translate-y-1/2\"\r\n          >\r\n            <CalendarIcon className=\"size-3.5\" />\r\n            <span className=\"sr-only\">Select date</span>\r\n          </Button>\r\n        </PopoverTrigger>\r\n        <PopoverContent\r\n          className=\"w-auto overflow-hidden p-0\"\r\n          align=\"end\"\r\n          alignOffset={-8}\r\n          sideOffset={10}\r\n        >\r\n          <Calendar\r\n            mode=\"single\"\r\n            selected={date}\r\n            captionLayout=\"dropdown\"\r\n            month={month}\r\n            onMonthChange={setMonth}\r\n            onSelect={(date) => {\r\n              setDate(date);\r\n              setVal(formatDate(date));\r\n              setOpen(false);\r\n            }}\r\n          />\r\n        </PopoverContent>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}